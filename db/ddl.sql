CREATE TABLE [User] (
	UserID INT IDENTITY(1,1) PRIMARY KEY,
	FName VARCHAR(10) NOT NULL,
	LName VARCHAR(10),
	Username VARCHAR(30) NOT NULL UNIQUE,
	[Password] BINARY(60) NOT NULL,
	Phone VARCHAR(15),
	Email VARCHAR(30) UNIQUE,
	IsAdmin BIT DEFAULT 0 -- SET TO 1 IF 'NORMAL USER', 1 IF 'ADMIN'. NORMAL USER BY DEFAULT.
); 

CREATE TABLE Tag (
	TagID INT IDENTITY(1,1) PRIMARY KEY,
	[Name] VARCHAR(20) NOT NULL UNIQUE,
	CreatedBy INT FOREIGN KEY REFERENCES [User](UserID) NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE() NOT NULL
);

CREATE TABLE Dataset (
	DatasetID INT IDENTITY(1,1) PRIMARY KEY,
	[Name] VARCHAR(20) NOT NULL UNIQUE,
	[Description] VARCHAR(60),
	OwnerID INT FOREIGN KEY REFERENCES [User](UserID) ON DELETE CASCADE NOT NULL,
	StoragePath VARCHAR(50) NOT NULL UNIQUE,
	CreatedAt DATETIME DEFAULT GETDATE() NOT NULL,
	LastEditedBy INT FOREIGN  KEY REFERENCES [User](UserID),
	LastEditedAt DATETIME DEFAULT GETDATE(),
	DownloadCount INT DEFAULT 0,
	IsPublic BIT DEFAULT 0 -- SET TO 0 IF 'PRIVATE', 1 IF PUBLIC. PRIVATE BY DEFAULT.
);

CREATE TABLE TagRequests (
	RequestID INT IDENTITY(1,1) PRIMARY KEY,
	[Name] VARCHAR(20) NOT NULL,
	RequestedBy INT FOREIGN KEY REFERENCES [User](UserID) ON DELETE CASCADE NOT NULL,
	RequestedAt DATETIME DEFAULT GETDATE(),
	[Status] BIT DEFAULT NULL -- SET TO 'NULL' IF PENDING, 0 IF 'REJECTED' AND 1 IF 'ACCEPTED'. NULL BY DEFAULT.
);

CREATE TABLE DatasetCollaborator (
	DatasetID INT FOREIGN KEY REFERENCES Dataset(DatasetID) NOT NULL,
	CollaboratorID INT FOREIGN KEY REFERENCES [User](UserID) NOT NULL,
	PRIMARY KEY (DatasetID, CollaboratorID)
);

CREATE TABLE DatasetTag (
	DatasetID INT FOREIGN KEY REFERENCES Dataset(DatasetID) NOT NULL,
	TagID INT FOREIGN KEY REFERENCES Tag(TagID) NOT NULL,
	PRIMARY KEY (DatasetID, TagID)
);